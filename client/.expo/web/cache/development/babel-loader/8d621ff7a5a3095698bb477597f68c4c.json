{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons, FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport { getExhibitions } from \"../services/exhibitionService\";\nimport HomeStackScreen from \"../navigations/HomeStackScreen\";\nimport ExhibitionStackScreen from \"../navigations/ExhibitionStackScreen\";\nimport ArtworkStackScreen from \"../navigations/ArtworkStackScreen\";\nimport TicketStackScreen from \"../navigations/TicketStackScreen\";\nimport ProfileStackScreen from \"../navigations/ProfileStackScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      exhibitionData = _useState2[0],\n      setExhibitionData = _useState2[1];\n\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var result = yield getExhibitions();\n        setExhibitionData(result);\n      } catch (error) {\n        console.log('[ERROR]', error);\n      }\n    });\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          title: '',\n          tabBarActiveTintColor: '#FFFFF3',\n          tabBarInactiveTintColor: '#a9a9a9',\n          tabBarLabelStyle: {\n            fontSize: 10\n          },\n          tabBarStyle: [{\n            display: 'flex',\n            backgroundColor: '#152238'\n          }, null],\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"HomeTab\",\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(Ionicons, {\n              name: \"home\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children(props) {\n          return _jsx(HomeStackScreen, {\n            exhibitionData: exhibitionData\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"current\",\n        options: {\n          unmountOnBlur: true,\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return _jsx(MaterialIcons, {\n              name: \"museum\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children(props) {\n          return _jsx(ExhibitionStackScreen, {\n            exhibitionData: exhibitionData\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"ArtworkTab\",\n        component: ArtworkStackScreen,\n        options: {\n          unmountOnBlur: true,\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size;\n            return _jsx(Ionicons, {\n              name: \"color-palette\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"TicketTab\",\n        component: TicketStackScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return _jsx(FontAwesome5, {\n              name: \"ticket-alt\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"ProfileTab\",\n        component: ProfileStackScreen,\n        options: {\n          unmountOnBlur: true,\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color,\n                size = _ref7.size;\n            return _jsx(Ionicons, {\n              name: \"person\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","Ionicons","FontAwesome5","MaterialIcons","getExhibitions","HomeStackScreen","ExhibitionStackScreen","ArtworkStackScreen","TicketStackScreen","ProfileStackScreen","Tab","Navigation","exhibitionData","setExhibitionData","fetchData","result","error","console","log","route","title","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","fontSize","tabBarStyle","display","backgroundColor","headerShown","tabBarIcon","color","size","props","unmountOnBlur"],"sources":["/Users/sebastiansiclari/Desktop/Cabinet-of-Curiosities/client/src/navigations/Navigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons, FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport { getExhibitions } from '../services/exhibitionService';\nimport HomeStackScreen from '../navigations/HomeStackScreen';\nimport ExhibitionStackScreen from '../navigations/ExhibitionStackScreen';\nimport ArtworkStackScreen from '../navigations/ArtworkStackScreen';\nimport TicketStackScreen from '../navigations/TicketStackScreen';\nimport ProfileStackScreen from '../navigations/ProfileStackScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Navigation() {\n  const [exhibitionData, setExhibitionData] = useState('');\n\n  const fetchData = async () => {\n    try {\n      const result = await getExhibitions();\n      setExhibitionData(result);\n    } catch (error) {\n      console.log('[ERROR]', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          title: '',\n          tabBarActiveTintColor: '#FFFFF3',\n          tabBarInactiveTintColor: '#a9a9a9',\n          tabBarLabelStyle: { fontSize: 10 },\n          tabBarStyle: [{ display: 'flex', backgroundColor: '#152238' }, null],\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen\n          name=\"HomeTab\"\n          options={{\n            // tabBarLabel: 'Home',\n            tabBarIcon: ({ color, size }) => (\n              <Ionicons name=\"home\" color={color} size={size} />\n            ),\n          }}\n        >\n          {(props) => <HomeStackScreen exhibitionData={exhibitionData} />}\n        </Tab.Screen>\n        <Tab.Screen\n          name=\"current\"\n          options={{\n            unmountOnBlur: true,\n            // tabBarLabel: 'Current',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialIcons name=\"museum\" color={color} size={size} />\n            ),\n          }}\n        >\n          {(props) => <ExhibitionStackScreen exhibitionData={exhibitionData} />}\n        </Tab.Screen>\n        <Tab.Screen\n          name=\"ArtworkTab\"\n          component={ArtworkStackScreen}\n          options={{\n            unmountOnBlur: true,\n            // tabBarLabel: 'Cabinet',\n            tabBarIcon: ({ color, size }) => (\n              <Ionicons name=\"color-palette\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"TicketTab\"\n          component={TicketStackScreen}\n          options={{\n            // tabBarLabel: 'Ticket',\n            tabBarIcon: ({ color, size }) => (\n              <FontAwesome5 name=\"ticket-alt\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"ProfileTab\"\n          component={ProfileStackScreen}\n          options={{\n            unmountOnBlur: true,\n            // tabBarLabel: 'Profile',\n            tabBarIcon: ({ color, size }) => (\n              <Ionicons name=\"person\" color={color} size={size} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,aAAjC,QAAsD,oBAAtD;AACA,SAASC,cAAT;AACA,OAAOC,eAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,kBAAP;;;AAEA,IAAMC,GAAG,GAAGV,wBAAwB,EAApC;AAEA,eAAe,SAASW,UAAT,GAAsB;EACnC,gBAA4Cd,QAAQ,CAAC,EAAD,CAApD;EAAA;EAAA,IAAOe,cAAP;EAAA,IAAuBC,iBAAvB;;EAEA,IAAMC,SAAS;IAAA,6BAAG,aAAY;MAC5B,IAAI;QACF,IAAMC,MAAM,SAASX,cAAc,EAAnC;QACAS,iBAAiB,CAACE,MAAD,CAAjB;MACD,CAHD,CAGE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;MACD;IACF,CAPc;;IAAA,gBAATF,SAAS;MAAA;IAAA;EAAA,GAAf;;EASAhB,SAAS,CAAC,YAAM;IACdgB,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,GAAD,CAAK,SAAL;MACE,aAAa,EAAE;QAAA,IAAGK,KAAH,SAAGA,KAAH;QAAA,OAAgB;UAC7BC,KAAK,EAAE,EADsB;UAE7BC,qBAAqB,EAAE,SAFM;UAG7BC,uBAAuB,EAAE,SAHI;UAI7BC,gBAAgB,EAAE;YAAEC,QAAQ,EAAE;UAAZ,CAJW;UAK7BC,WAAW,EAAE,CAAC;YAAEC,OAAO,EAAE,MAAX;YAAmBC,eAAe,EAAE;UAApC,CAAD,EAAkD,IAAlD,CALgB;UAM7BC,WAAW,EAAE;QANgB,CAAhB;MAAA,CADjB;MAAA,WAUE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,SADP;QAEE,OAAO,EAAE;UAEPC,UAAU,EAAE;YAAA,IAAGC,KAAH,SAAGA,KAAH;YAAA,IAAUC,IAAV,SAAUA,IAAV;YAAA,OACV,KAAC,QAAD;cAAU,IAAI,EAAC,MAAf;cAAsB,KAAK,EAAED,KAA7B;cAAoC,IAAI,EAAEC;YAA1C,EADU;UAAA;QAFL,CAFX;QAAA,UASG,kBAACC,KAAD;UAAA,OAAW,KAAC,eAAD;YAAiB,cAAc,EAAEpB;UAAjC,EAAX;QAAA;MATH,EAVF,EAqBE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,SADP;QAEE,OAAO,EAAE;UACPqB,aAAa,EAAE,IADR;UAGPJ,UAAU,EAAE;YAAA,IAAGC,KAAH,SAAGA,KAAH;YAAA,IAAUC,IAAV,SAAUA,IAAV;YAAA,OACV,KAAC,aAAD;cAAe,IAAI,EAAC,QAApB;cAA6B,KAAK,EAAED,KAApC;cAA2C,IAAI,EAAEC;YAAjD,EADU;UAAA;QAHL,CAFX;QAAA,UAUG,kBAACC,KAAD;UAAA,OAAW,KAAC,qBAAD;YAAuB,cAAc,EAAEpB;UAAvC,EAAX;QAAA;MAVH,EArBF,EAiCE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,YADP;QAEE,SAAS,EAAEL,kBAFb;QAGE,OAAO,EAAE;UACP0B,aAAa,EAAE,IADR;UAGPJ,UAAU,EAAE;YAAA,IAAGC,KAAH,SAAGA,KAAH;YAAA,IAAUC,IAAV,SAAUA,IAAV;YAAA,OACV,KAAC,QAAD;cAAU,IAAI,EAAC,eAAf;cAA+B,KAAK,EAAED,KAAtC;cAA6C,IAAI,EAAEC;YAAnD,EADU;UAAA;QAHL;MAHX,EAjCF,EA4CE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,WADP;QAEE,SAAS,EAAEvB,iBAFb;QAGE,OAAO,EAAE;UAEPqB,UAAU,EAAE;YAAA,IAAGC,KAAH,SAAGA,KAAH;YAAA,IAAUC,IAAV,SAAUA,IAAV;YAAA,OACV,KAAC,YAAD;cAAc,IAAI,EAAC,YAAnB;cAAgC,KAAK,EAAED,KAAvC;cAA8C,IAAI,EAAEC;YAApD,EADU;UAAA;QAFL;MAHX,EA5CF,EAsDE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,YADP;QAEE,SAAS,EAAEtB,kBAFb;QAGE,OAAO,EAAE;UACPwB,aAAa,EAAE,IADR;UAGPJ,UAAU,EAAE;YAAA,IAAGC,KAAH,SAAGA,KAAH;YAAA,IAAUC,IAAV,SAAUA,IAAV;YAAA,OACV,KAAC,QAAD;cAAU,IAAI,EAAC,QAAf;cAAwB,KAAK,EAAED,KAA/B;cAAsC,IAAI,EAAEC;YAA5C,EADU;UAAA;QAHL;MAHX,EAtDF;IAAA;EADF,EADF;AAsED"},"metadata":{},"sourceType":"module"}