{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons';\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport EditProfile from \"../components/EditProfile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function ProfileStackScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var navigation = useNavigation();\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#152238'\n      },\n      headerTitleAlign: 'left',\n      headerTintColor: '#FFFFF3',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        fontSize: '25'\n      },\n      headerBackImage: function headerBackImage() {\n        return _jsx(Ionicons, {\n          name: \"ios-chevron-back\",\n          size: 25,\n          color: \"#FFFFF3\",\n          style: {\n            paddingLeft: 10\n          }\n        });\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Profile\",\n      options: {\n        headerRight: function headerRight() {\n          return _jsx(FontAwesome5, {\n            onPress: function onPress() {\n              return navigation.navigate('EditProfile', {\n                profile: profile,\n                setProfile: setProfile\n              });\n            },\n            name: \"user-edit\",\n            size: 18,\n            color: \"#FFFFF3\",\n            style: {\n              paddingRight: 10\n            }\n          });\n        }\n      },\n      children: function children(props) {\n        return _jsx(ProfileScreen, {\n          profile: profile,\n          setProfile: setProfile\n        });\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EditProfile\",\n      component: EditProfile,\n      options: {\n        headerTitle: '',\n        headerBackTitleVisible: false\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","createStackNavigator","useNavigation","Ionicons","FontAwesome5","ProfileScreen","EditProfile","Stack","ProfileStackScreen","profile","setProfile","navigation","headerStyle","backgroundColor","headerTitleAlign","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerBackImage","paddingLeft","headerRight","navigate","paddingRight","props","headerTitle","headerBackTitleVisible"],"sources":["/Users/sebastiansiclari/Desktop/Cabinet-of-Curiosities/client/src/navigations/ProfileStackScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport EditProfile from '../components/EditProfile';\n\nconst Stack = createStackNavigator();\n\nexport default function ProfileStackScreen() {\n  const [profile, setProfile] = useState([]);\n  const navigation = useNavigation();\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#152238',\n        },\n        headerTitleAlign: 'left',\n        headerTintColor: '#FFFFF3',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: '25',\n        },\n        headerBackImage: () => (\n          <Ionicons\n            name=\"ios-chevron-back\"\n            size={25}\n            color=\"#FFFFF3\"\n            style={{ paddingLeft: 10 }}\n          />\n        ),\n      }}\n    >\n      <Stack.Screen\n        name=\"Profile\"\n        options={{\n          headerRight: () => (\n            <FontAwesome5\n              onPress={() =>\n                navigation.navigate('EditProfile', { profile, setProfile })\n              }\n              name=\"user-edit\"\n              size={18}\n              color=\"#FFFFF3\"\n              style={{ paddingRight: 10 }}\n            />\n          ),\n        }}\n      >\n        {(props) => <ProfileScreen profile={profile} setProfile={setProfile} />}\n      </Stack.Screen>\n      <Stack.Screen\n        name=\"EditProfile\"\n        component={EditProfile}\n        options={{\n          headerTitle: '',\n          headerBackTitleVisible: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,oBAAvC;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAEA,eAAe,SAASO,kBAAT,GAA8B;EAC3C,gBAA8BR,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOS,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,UAAU,GAAGT,aAAa,EAAhC;EACA,OACE,MAAC,KAAD,CAAO,SAAP;IACE,aAAa,EAAE;MACbU,WAAW,EAAE;QACXC,eAAe,EAAE;MADN,CADA;MAIbC,gBAAgB,EAAE,MAJL;MAKbC,eAAe,EAAE,SALJ;MAMbC,gBAAgB,EAAE;QAChBC,UAAU,EAAE,MADI;QAEhBC,QAAQ,EAAE;MAFM,CANL;MAUbC,eAAe,EAAE;QAAA,OACf,KAAC,QAAD;UACE,IAAI,EAAC,kBADP;UAEE,IAAI,EAAE,EAFR;UAGE,KAAK,EAAC,SAHR;UAIE,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAf;QAJT,EADe;MAAA;IAVJ,CADjB;IAAA,WAqBE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,SADP;MAEE,OAAO,EAAE;QACPC,WAAW,EAAE;UAAA,OACX,KAAC,YAAD;YACE,OAAO,EAAE;cAAA,OACPV,UAAU,CAACW,QAAX,CAAoB,aAApB,EAAmC;gBAAEb,OAAO,EAAPA,OAAF;gBAAWC,UAAU,EAAVA;cAAX,CAAnC,CADO;YAAA,CADX;YAIE,IAAI,EAAC,WAJP;YAKE,IAAI,EAAE,EALR;YAME,KAAK,EAAC,SANR;YAOE,KAAK,EAAE;cAAEa,YAAY,EAAE;YAAhB;UAPT,EADW;QAAA;MADN,CAFX;MAAA,UAgBG,kBAACC,KAAD;QAAA,OAAW,KAAC,aAAD;UAAe,OAAO,EAAEf,OAAxB;UAAiC,UAAU,EAAEC;QAA7C,EAAX;MAAA;IAhBH,EArBF,EAuCE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,aADP;MAEE,SAAS,EAAEJ,WAFb;MAGE,OAAO,EAAE;QACPmB,WAAW,EAAE,EADN;QAEPC,sBAAsB,EAAE;MAFjB;IAHX,EAvCF;EAAA,EADF;AAkDD"},"metadata":{},"sourceType":"module"}